@page "/"
@using Charts.Components

<PageTitle>Dashboard</PageTitle>

<!-- Quick toolbar trick -->
<div style="position: absolute;top:0.5em;z-index:1000">
    <Button Color="ButtonColor.Success" @onclick="Shift">Shift positions</Button>
    <Button Color="ButtonColor.Success" @onclick="Rand">Random charts</Button>
    <Button Color="ButtonColor.Success" @onclick="Reset">Reset all</Button>
</div>

<div class="container text-center bg-light bg-gradient px-3 mb-5 shadow">
    <div class="row">
        <div class="col col-7">
            @GetAt(0)
        </div>
        <div class="col col-5">
            @GetAt(1)
        </div>
        <div class="clearfix" />
        <div class="col col-4">
            @GetAt(2)
        </div>
        <div class="col col-8">
            @GetAt(3)
        </div>
    </div>
</div>

@code {
    int[] CellsContent = Enumerable.Range(0, 4).ToArray();

    private RenderFragment GetAt(int posNum) => __builder => {
        int type = CellsContent[posNum];

        switch (type) {
            case 0:
                <Callout Heading='Main Data'>
                    <BarChartComponent />
                </Callout>
                break;
            case 1:
                <Callout Heading="Operating System" Type="CalloutType.Info">
                    <StackBarChartComponent />
                </Callout>
                break;
            case 2:
                <Callout Heading="2023 Sales" Type="CalloutType.Tip">
                    <DoughnutChartComponent />
                </Callout>
                break;
            case 3:
                <Callout Heading="Servers Load" Type="CalloutType.Warning">
                    <LineChartComponent />
                </Callout>
                break;
        }
    };

    void Shift()
    {
        int p0 = CellsContent[0];
        Array.Copy(CellsContent, 1, CellsContent, 0, CellsContent.Length - 1);
        CellsContent[CellsContent.Length - 1] = p0;
    }

    void Rand()
    {
        var rnd = new Random();
        int l = CellsContent.Length;
        for (int i = 0; i < l; i++)
            CellsContent[i] = rnd.Next(l);
    }

    void Reset()
    {
        CellsContent = Enumerable.Range(0, 4).ToArray();
    }
}
